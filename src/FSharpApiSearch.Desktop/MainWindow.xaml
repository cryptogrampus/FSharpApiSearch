<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:FSharpApiSearch.Desktop;assembly=FSharpApiSearch.Desktop"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializeModelCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>

        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" CornerRadius="2,0,0,0" BorderThickness="0,0,1,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop />
                        <GradientStop />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Panel.ZIndex="1" OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" IsChecked="{Binding IsExpanded, Mode=TwoWay,  RelativeSource={RelativeSource TemplatedParent}}">
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="0" Panel.ZIndex="0" Margin="0" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content" Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                                <Border.BorderBrush>
                                    <SolidColorBrush />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush />
                                </Border.Background>
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Name="QueryInput" Text="{Binding Path=Query.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding  Gesture="Enter" Command="{Binding Path=SearchCommand}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Column="1" Content="Search" Command="{Binding Path=SearchCommand}" />
        </Grid>
        <TextBlock DockPanel.Dock="Top" Text="{Binding Path=ErrorMessage.Value, Mode=OneWay}" Visibility="{Binding Path=HasError.Value, Mode=OneWay}" />
        <TextBlock DockPanel.Dock="Top" Text="{Binding Path=ResultCount.Value, StringFormat={}{0} results, Mode=OneWay}" Visibility="{Binding Path=Searched.Value, Mode=OneWay}" />
        <ListView Padding="0"
                  ItemsSource="{Binding Path=Results.Value, Mode=OneWay}"
                  Visibility="{Binding Path=Searched.Value, Mode=OneWay}"
                  BorderThickness="0">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Expander>
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=DeclarationType, Mode=OneTime}" Foreground="DarkGray" />
                                <TextBlock Text="." />
                                <TextBlock Text="{Binding Path=Name, Mode=OneTime}" />
                                <TextBlock Text=" : " />
                                <ItemsControl ItemsSource="{Binding Path=Signature, Mode=OneTime}">
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Text, Mode=OneTime}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasColor, Mode=OneTime}" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding Path=Color, Mode=OneTime}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Expander.Header>

                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Path=Constraints, Mode=OneTime}" Visibility="{Binding Path=HasConstraints, Mode=OneTime}" />
                            <TextBlock Text="{Binding Path=AccessPath, StringFormat=namespace: {0}, Mode=OneTime}" />
                            <TextBlock Text="{Binding Path=Kind, StringFormat=kind: {0}, Mode=OneTime}" />
                            <TextBlock Text="{Binding Path=Assembly, StringFormat=assembly: {0}, Mode=OneTime}" />
                            <TextBlock Text="{Binding Path=Document, Mode=OneTime}" Visibility="{Binding Path=HasDocument, Mode=OneTime}" TextWrapping="Wrap" />
                        </StackPanel>
                    </Expander>
                    
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</Window>
